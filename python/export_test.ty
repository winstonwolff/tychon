# Exporting of symbols from a module

macro:: export [value_sym]
    __export__(caller_scope value_sym)

func:: __export__ [caller_scope value]
    if::
        not(dictionary_in(caller_scope '__exports__'))
        mut_dictionary_set(caller_scope '__exports__' MutDictionary())

    define(value evaluate(value_sym))
    mut_dictionary_set::
        dictionary_get(caller_scope '__exports__')
        getattr(value '__name__')
        value

test:: 'export() adds an item to the __exports__ dictionary'
    func:: double [a] [a * 2]
    export( double )
    assert_equal::
        dictionary_get(dictionary_get(__scope__ '__exports__') 'double')
        double
